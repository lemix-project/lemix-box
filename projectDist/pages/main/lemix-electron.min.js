/******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
/******/ 	window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadUpdateChunk(chunkId) {
/******/ 		var script = document.createElement("script");
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		if (null) script.crossOrigin = null;
/******/ 		document.head.appendChild(script);
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadManifest(requestTimeout) {
/******/ 		requestTimeout = requestTimeout || 10000;
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if (typeof XMLHttpRequest === "undefined") {
/******/ 				return reject(new Error("No browser support"));
/******/ 			}
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = requestTimeout;
/******/ 				request.send(null);
/******/ 			} catch (err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if (request.readyState !== 4) return;
/******/ 				if (request.status === 0) {
/******/ 					// timeout
/******/ 					reject(
/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
/******/ 					);
/******/ 				} else if (request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if (request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch (e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	var hotApplyOnUpdate = true;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentHash = "4f6393870dd86c0455b9";
/******/ 	var hotRequestTimeout = 10000;
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParents = [];
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = [];
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateRequire(moduleId) {
/******/ 		var me = installedModules[moduleId];
/******/ 		if (!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if (me.hot.active) {
/******/ 				if (installedModules[request]) {
/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					}
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if (me.children.indexOf(request) === -1) {
/******/ 					me.children.push(request);
/******/ 				}
/******/ 			} else {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" +
/******/ 						request +
/******/ 						") from disposed module " +
/******/ 						moduleId
/******/ 				);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for (var name in __webpack_require__) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
/******/ 				name !== "e" &&
/******/ 				name !== "t"
/******/ 			) {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if (hotStatus === "prepare") {
/******/ 					if (!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		fn.t = function(value, mode) {
/******/ 			if (mode & 1) value = fn(value);
/******/ 			return __webpack_require__.t(value, mode & ~1);
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateModule(moduleId) {
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if (dep === undefined) hot._selfAccepted = true;
/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if (dep === undefined) hot._selfDeclined = true;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if (!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = +id + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/
/******/ 	function hotCheck(apply) {
/******/ 		if (hotStatus !== "idle") {
/******/ 			throw new Error("check() is only allowed in idle status");
/******/ 		}
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
/******/ 			if (!update) {
/******/ 				hotSetStatus("idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = "main";
/******/ 			// eslint-disable-next-line no-lone-blocks
/******/ 			{
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if (
/******/ 				hotStatus === "prepare" &&
/******/ 				hotChunksLoading === 0 &&
/******/ 				hotWaitingFiles === 0
/******/ 			) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for (var moduleId in moreModules) {
/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if (!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if (!deferred) return;
/******/ 		if (hotApplyOnUpdate) {
/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
/******/ 			// avoid triggering uncaught exception warning in Chrome.
/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
/******/ 			Promise.resolve()
/******/ 				.then(function() {
/******/ 					return hotApply(hotApplyOnUpdate);
/******/ 				})
/******/ 				.then(
/******/ 					function(result) {
/******/ 						deferred.resolve(result);
/******/ 					},
/******/ 					function(err) {
/******/ 						deferred.reject(err);
/******/ 					}
/******/ 				);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for (var id in hotUpdate) {
/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApply(options) {
/******/ 		if (hotStatus !== "ready")
/******/ 			throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/
/******/ 			var queue = outdatedModules.slice().map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while (queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if (!module || module.hot._selfAccepted) continue;
/******/ 				if (module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if (module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for (var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if (!parent) continue;
/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if (!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/
/******/ 		function addAllToSet(a, b) {
/******/ 			for (var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if (a.indexOf(item) === -1) a.push(item);
/******/ 			}
/******/ 		}
/******/
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn(
/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
/******/ 			);
/******/ 		};
/******/
/******/ 		for (var id in hotUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				/** @type {TODO} */
/******/ 				var result;
/******/ 				if (hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				/** @type {Error|false} */
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if (result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch (result.type) {
/******/ 					case "self-declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of self decline: " +
/******/ 									result.moduleId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of declined dependency: " +
/******/ 									result.moduleId +
/******/ 									" in " +
/******/ 									result.parentId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 						if (!options.ignoreUnaccepted)
/******/ 							abortError = new Error(
/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if (options.onAccepted) options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if (options.onDisposed) options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if (abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if (doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for (moduleId in result.outdatedDependencies) {
/******/ 						if (
/******/ 							Object.prototype.hasOwnProperty.call(
/******/ 								result.outdatedDependencies,
/******/ 								moduleId
/******/ 							)
/******/ 						) {
/******/ 							if (!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(
/******/ 								outdatedDependencies[moduleId],
/******/ 								result.outdatedDependencies[moduleId]
/******/ 							);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if (doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for (i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if (
/******/ 				installedModules[moduleId] &&
/******/ 				installedModules[moduleId].hot._selfAccepted
/******/ 			)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while (queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if (!module) continue;
/******/
/******/ 			var data = {};
/******/
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/
/******/ 			// when disposing there is no need to call dispose handler
/******/ 			delete outdatedDependencies[moduleId];
/******/
/******/ 			// remove "parents" references from all children
/******/ 			for (j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if (!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if (idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if (idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/
/******/ 		// insert new code
/******/ 		for (moduleId in appliedUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					var callbacks = [];
/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 						dependency = moduleOutdatedDependencies[i];
/******/ 						cb = module.hot._acceptedDependencies[dependency];
/******/ 						if (cb) {
/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
/******/ 							callbacks.push(cb);
/******/ 						}
/******/ 					}
/******/ 					for (i = 0; i < callbacks.length; i++) {
/******/ 						cb = callbacks[i];
/******/ 						try {
/******/ 							cb(moduleOutdatedDependencies);
/******/ 						} catch (err) {
/******/ 							if (options.onErrored) {
/******/ 								options.onErrored({
/******/ 									type: "accept-errored",
/******/ 									moduleId: moduleId,
/******/ 									dependencyId: moduleOutdatedDependencies[i],
/******/ 									error: err
/******/ 								});
/******/ 							}
/******/ 							if (!options.ignoreErrored) {
/******/ 								if (!error) error = err;
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Load self accepted modules
/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch (err) {
/******/ 				if (typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch (err2) {
/******/ 						if (options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								originalError: err
/******/ 							});
/******/ 						}
/******/ 						if (!options.ignoreErrored) {
/******/ 							if (!error) error = err2;
/******/ 						}
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if (options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if (!options.ignoreErrored) {
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if (error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire("./src/index.js")(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/biometrics/check.js":
/*!*********************************!*\
  !*** ./src/biometrics/check.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var start = function start(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.BIOMETRICS.CHECK.START, hConfig);
};
exports.default = {
    start: start
};

/***/ }),

/***/ "./src/biometrics/index.js":
/*!*********************************!*\
  !*** ./src/biometrics/index.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _check = __webpack_require__(/*! ./check */ "./src/biometrics/check.js");

var _check2 = _interopRequireDefault(_check);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    check: _check2.default
};

/***/ }),

/***/ "./src/call/customs.js":
/*!*****************************!*\
  !*** ./src/call/customs.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var callCustom = function callCustom(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.CALL.CUSTOMS.CALL_CUSTOM, hConfig);
};
exports.default = {
    callCustom: callCustom
};

/***/ }),

/***/ "./src/call/index.js":
/*!***************************!*\
  !*** ./src/call/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _customs = __webpack_require__(/*! ./customs */ "./src/call/customs.js");

var _customs2 = _interopRequireDefault(_customs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    customs: _customs2.default
};

/***/ }),

/***/ "./src/core.js":
/*!*********************!*\
  !*** ./src/core.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var _platform = '';
var _callbackObj = new Object();

var __android__ = 'android';
var __ios__ = 'ios';
var __electron__ = 'electron';

/**
 * 设置当前平台（通常由平台调用）
 * @param platform 平台名称：android / ios
 */
var setPlatform = function setPlatform(platform) {
  _platform = platform;
};

/**
 * 获取当前设置的所属平台
 * @returns {string} 平台名称：android / ios
 */
var getPlatform = function getPlatform() {
  return _platform;
};

/**
 * 调用平台入口函数
 * @param type
 * @param parameters
 */
var sendMessage = function sendMessage(type, parameters, isSync) {
  var data = JSON.stringify({
    type: type,
    params: parameters,
    sync: isSync
  });
  if (getPlatform() === __android__) {
    // android消息发送
    return window.__js_android__.message(data);
  } else if (getPlatform() === __ios__) {
    // ios消息发送
    var result = window.prompt(data);
    return result;
  } else {
    // electron 消息发送

    // ipcMain.on('send-message', () => {
    //
    // })
    var _require = __webpack_require__(/*! electron */ "electron"),
        ipcRenderer = _require.ipcRenderer;
    // import {ipcRenderer} from 'electron'


    console.log('electron');
    ipcRenderer.send('send-message', 'sdk');
    // let result = window.__electronManage(data)
    // return result
  }
};

/**
 * 保存callback函数
 * @param uuid
 * @param fn
 */
var saveCallback = function saveCallback(fn) {
  var uuid = createUUID();
  _callbackObj[uuid] = fn;
  return uuid;
};

/**
 * 读取callback函数
 * @param uuid
 * @returns {*}
 */
var loadCallback = function loadCallback(uuid) {
  var arr = Array.prototype.slice.call(arguments);
  arr.splice(0, 1);
  return _callbackObj[uuid].apply(window, arr);
};

/**
 * 销毁uuid和callback映射关系
 * @param uuid
 */
var distoryCallback = function distoryCallback(uuid) {
  delete _callbackObj[uuid];
};

/**
 * create uuid
 */
var createUUID = function (uuidRegEx, uuidReplacer) {
  return function () {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(uuidRegEx, uuidReplacer).toUpperCase();
  };
}(/[xy]/g, function (c) {
  var r = Math.random() * 16 | 0,
      v = c == "x" ? r : r & 3 | 8;
  return v.toString(16);
});

/**
 * 统一处理config，把config中的回调函数传入saveCallback
 * @param config
 * @returns {*}
 */
var handleConfig = function handleConfig(config) {
  for (var key in config) {
    if (typeof config[key] === "function") {
      config[key] = saveCallback(config[key]);
    }
  }
  return config;
};

exports.default = {
  setPlatform: setPlatform,
  getPlatform: getPlatform,
  sendMessage: sendMessage,
  saveCallback: saveCallback,
  loadCallback: loadCallback,
  distoryCallback: distoryCallback,
  createUUID: createUUID,
  handleConfig: handleConfig
};

/***/ }),

/***/ "./src/data/index.js":
/*!***************************!*\
  !*** ./src/data/index.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _storage = __webpack_require__(/*! ./storage */ "./src/data/storage.js");

var _storage2 = _interopRequireDefault(_storage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    storage: _storage2.default
};

/***/ }),

/***/ "./src/data/storage.js":
/*!*****************************!*\
  !*** ./src/data/storage.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var getLocalStorage = function getLocalStorage(config) {
    var hConfig = __handle_config(config);
    return __send_message(__TYPE.DATA.STORAGE.GET, hConfig, true);
};
var setLocalStorage = function setLocalStorage(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.DATA.STORAGE.SET, hConfig);
};
var clearLocalStorage = function clearLocalStorage(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.DATA.STORAGE.CLEAR, hConfig);
};
var removeLocalStorage = function removeLocalStorage(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.DATA.STORAGE.REMOVE, hConfig);
};
exports.default = {
    getLocalStorage: getLocalStorage,
    setLocalStorage: setLocalStorage,
    clearLocalStorage: clearLocalStorage,
    removeLocalStorage: removeLocalStorage
};

/***/ }),

/***/ "./src/image/album.js":
/*!****************************!*\
  !*** ./src/image/album.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var openAlbum = function openAlbum(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.IMAGE.ALBUM.OPEN, hConfig);
};

exports.default = {
    openAlbum: openAlbum
};

/***/ }),

/***/ "./src/image/camera.js":
/*!*****************************!*\
  !*** ./src/image/camera.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * 打开相机
 * @param config
 * @param callbacks
 *
 * @return 图片
 */

var openCamera = function openCamera(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.IMAGE.CAMERA.OPEN, hConfig);
};

exports.default = {
    openCamera: openCamera
};

/***/ }),

/***/ "./src/image/code.js":
/*!***************************!*\
  !*** ./src/image/code.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var scanQRCode = function scanQRCode(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.IMAGE.CODE.SCANQRCODE, hConfig);
};

exports.default = {
    scanQRCode: scanQRCode
};

/***/ }),

/***/ "./src/image/index.js":
/*!****************************!*\
  !*** ./src/image/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _camera = __webpack_require__(/*! ./camera */ "./src/image/camera.js");

var _camera2 = _interopRequireDefault(_camera);

var _album = __webpack_require__(/*! ./album */ "./src/image/album.js");

var _album2 = _interopRequireDefault(_album);

var _code = __webpack_require__(/*! ./code */ "./src/image/code.js");

var _code2 = _interopRequireDefault(_code);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    camera: _camera2.default,
    album: _album2.default,
    code: _code2.default
};

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _image = __webpack_require__(/*! ./image */ "./src/image/index.js");

var _image2 = _interopRequireDefault(_image);

var _core = __webpack_require__(/*! ./core */ "./src/core.js");

var _core2 = _interopRequireDefault(_core);

var _type = __webpack_require__(/*! ./type */ "./src/type.js");

var _type2 = _interopRequireDefault(_type);

var _ui = __webpack_require__(/*! ./ui */ "./src/ui/index.js");

var _ui2 = _interopRequireDefault(_ui);

var _net = __webpack_require__(/*! ./net */ "./src/net/index.js");

var _net2 = _interopRequireDefault(_net);

var _io = __webpack_require__(/*! ./io */ "./src/io/index.js");

var _io2 = _interopRequireDefault(_io);

var _map = __webpack_require__(/*! ./map */ "./src/map/index.js");

var _map2 = _interopRequireDefault(_map);

var _call = __webpack_require__(/*! ./call */ "./src/call/index.js");

var _call2 = _interopRequireDefault(_call);

var _data = __webpack_require__(/*! ./data */ "./src/data/index.js");

var _data2 = _interopRequireDefault(_data);

var _biometrics = __webpack_require__(/*! ./biometrics */ "./src/biometrics/index.js");

var _biometrics2 = _interopRequireDefault(_biometrics);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

window.$__set_platform__ = _core2.default.setPlatform;
window.__send_message = _core2.default.sendMessage;
window.__TYPE = _type2.default;
window.__handle_config = _core2.default.handleConfig;
window.__load_callback = _core2.default.loadCallback;
window.__distory_callback = _core2.default.distoryCallback;

window.$__get_platform__ = _core2.default.getPlatform;

window.$lemix = {
    image: _image2.default,
    ui: _ui2.default,
    net: _net2.default,
    io: _io2.default,
    map: _map2.default,
    call: _call2.default,
    data: _data2.default,
    biometrics: _biometrics2.default
};

/***/ }),

/***/ "./src/io/file.js":
/*!************************!*\
  !*** ./src/io/file.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var deleteLongTermFile = function deleteLongTermFile(fileKey) {
    __send_message(__TYPE.IO.FILE.DELETE_LONG_TERM_FILE, {
        fileKey: fileKey
    });
};

var deleteShortTermFile = function deleteShortTermFile(fileKey) {
    __send_message(__TYPE.IO.FILE.DELETE_SHORT_TERM_FILE, {
        fileKey: fileKey
    });
};

var clearAllLongTermFiles = function clearAllLongTermFiles() {
    __send_message(__TYPE.IO.FILE.CLEAR_ALL_LONG_TERM_FILES, {});
};

var clearAllShortTermFiles = function clearAllShortTermFiles() {
    __send_message(__TYPE.IO.FILE.CLEAR_ALL_SHORT_TERM_FILES, {});
};

exports.default = {
    deleteLongTermFile: deleteLongTermFile,
    deleteShortTermFile: deleteShortTermFile,
    clearAllLongTermFiles: clearAllLongTermFiles,
    clearAllShortTermFiles: clearAllShortTermFiles
};

/***/ }),

/***/ "./src/io/index.js":
/*!*************************!*\
  !*** ./src/io/index.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _file = __webpack_require__(/*! ./file */ "./src/io/file.js");

var _file2 = _interopRequireDefault(_file);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    file: _file2.default
};

/***/ }),

/***/ "./src/map/index.js":
/*!**************************!*\
  !*** ./src/map/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _location = __webpack_require__(/*! ./location */ "./src/map/location.js");

var _location2 = _interopRequireDefault(_location);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    location: _location2.default
};

/***/ }),

/***/ "./src/map/location.js":
/*!*****************************!*\
  !*** ./src/map/location.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
// 定位一次
var getLocation = function getLocation(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.MAP.LOCATION.GET_POSITION, hConfig);
};
// 即时定位(打开)
var onInstantLocation = function onInstantLocation(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.MAP.LOCATION.ON_INSTANT_POSITION, hConfig);
};
// 即时定位(关闭)
var offInstantLocation = function offInstantLocation(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.MAP.LOCATION.OFF_INSTANT_POSITION, hConfig);
};
exports.default = {
    getLocation: getLocation,
    onInstantLocation: onInstantLocation,
    offInstantLocation: offInstantLocation
};

/***/ }),

/***/ "./src/net/http.js":
/*!*************************!*\
  !*** ./src/net/http.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * 同步请求
 * @param config { url,method,header,body,success,failed }
 */
var syncRequest = function syncRequest(config) {
    return __send_message(__TYPE.NET.HTTP.SYNC_REQUEST, config, true);
};
/**
 * 异步请求
 * @param config { url,method,header,body,success,failed }
 */
var asyncRequest = function asyncRequest(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.NET.HTTP.ASYNC_REQUEST, hConfig);
};
/**
 * 上传文件
 * @param config { url,method,header,fileKey,success,failed }
 */
var uploadFile = function uploadFile(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.NET.HTTP.UPLOAD_FILE, hConfig);
};
/**
 * 下载文件
 * @param config { url,method,header,success,failed }
 */
var downloadFile = function downloadFile(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.NET.HTTP.DOWNLOAD_FILE, hConfig);
};

exports.default = {
    syncRequest: syncRequest,
    asyncRequest: asyncRequest,
    uploadFile: uploadFile,
    downloadFile: downloadFile
};

/***/ }),

/***/ "./src/net/index.js":
/*!**************************!*\
  !*** ./src/net/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _http = __webpack_require__(/*! ./http */ "./src/net/http.js");

var _http2 = _interopRequireDefault(_http);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    http: _http2.default
};

/***/ }),

/***/ "./src/type.js":
/*!*********************!*\
  !*** ./src/type.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    IMAGE: {
        CAMERA: {
            OPEN: 'image.camera.open'
        },
        CODE: {
            SCANQRCODE: 'image.code.scanQRCode'
        },
        ALBUM: {
            OPEN: 'image.album.open'
        }
    },
    UI: {
        NAVIGATION: {
            PUSH: 'ui.navigation.push',
            POP: 'ui.navigation.pop',
            CLOSE: 'ui.navigation.close',
            PRESENT: 'ui.navigation.present'
        },
        STYLE: {
            SET_NAVIGATION_BAR_HIDDEN: 'ui.style.setNavigationBarHidden',
            SET_NAVIGATION_BACKGROUND_COLOR: 'ui.style.setNavigationBackgroundColor',
            SET_NAVIGATION_TITLE: 'ui.style.setNavigationTitle',
            SET_STATUS_BAR_HIDDEN: 'ui.style.setStatusBarHidden',
            SET_NAVIGATION_ITEM_COLOR: 'ui.style.setNavigationItemColor',
            SET_STATUS_BAR_STYLE: 'ui.style.setStatusBarStyle',
            GET_NAVIGATION_BAR_HEIGHT: 'ui.style.getNavigationBarHeight'
        },
        SCREEN: {
            GET_WIDTH: 'ui.screen.getWidth',
            GET_HEIGHT: 'ui.screen.getHeight',
            ROTATE: 'ui.screen.rotate'
        }
    },
    NET: {
        HTTP: {
            SYNC_REQUEST: 'net.http.syncRequest',
            ASYNC_REQUEST: 'net.http.asyncRequest',
            UPLOAD_FILE: 'net.http.uploadFile',
            DOWNLOAD_FILE: 'net.http.downloadFile'
        }
    },
    IO: {
        FILE: {
            DELETE_LONG_TERM_FILE: 'io.file.deleteLongTermFile',
            DELETE_SHORT_TERM_FILE: 'io.file.deleteShortTermFile',
            CLEAR_ALL_LONG_TERM_FILES: 'io.file.clearAllLongTermFiles',
            CLEAR_ALL_SHORT_TERM_FILES: 'io.file.clearAllShortTermFiles'
        }
    },
    MAP: {
        LOCATION: {
            GET_POSITION: 'map.location.getPosition',
            ON_INSTANT_POSITION: 'map.location.onInstantPosition',
            OFF_INSTANT_POSITION: 'map.location.offInstantPosition'
        }
    },
    CALL: {
        CUSTOMS: {
            CALL_CUSTOM: 'call.customs.callCustom'
        }
    },
    DATA: {
        STORAGE: {
            GET: 'data.storage.get',
            SET: 'data.storage.set',
            REMOVE: 'data.storage.remove',
            CLEAR: 'data.storage.clear'
        }
    },
    BIOMETRICS: {
        CHECK: {
            START: 'biometrics.check.start'
        }
    }
};

/***/ }),

/***/ "./src/ui/index.js":
/*!*************************!*\
  !*** ./src/ui/index.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _navigation = __webpack_require__(/*! ./navigation */ "./src/ui/navigation.js");

var _navigation2 = _interopRequireDefault(_navigation);

var _style = __webpack_require__(/*! ./style */ "./src/ui/style.js");

var _style2 = _interopRequireDefault(_style);

var _screen = __webpack_require__(/*! ./screen */ "./src/ui/screen.js");

var _screen2 = _interopRequireDefault(_screen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    navigation: _navigation2.default,
    style: _style2.default,
    screen: _screen2.default
};

/***/ }),

/***/ "./src/ui/navigation.js":
/*!******************************!*\
  !*** ./src/ui/navigation.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var push = function push(type, aim, config) {
    __send_message(__TYPE.UI.NAVIGATION.PUSH, {
        aim: aim,
        type: type,
        config: config
    });
};
var pop = function pop(layer) {
    __send_message(__TYPE.UI.NAVIGATION.POP, {
        layer: layer
    });
};
var close = function close(layer) {
    __send_message(__TYPE.UI.NAVIGATION.CLOSE, {
        layer: layer
    });
};
var present = function present(type, aim, config) {
    __send_message(__TYPE.UI.NAVIGATION.PRESENT, {
        type: type,
        aim: aim,
        config: config
    });
};

exports.default = {
    push: push, pop: pop, close: close, present: present
};

/***/ }),

/***/ "./src/ui/screen.js":
/*!**************************!*\
  !*** ./src/ui/screen.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * 获取宽度
 *
 * @return 宽度：float
 */
var getWidth = function getWidth() {
    __send_message(__TYPE.UI.SCREEN.GET_WIDTH, {});
};

/**
 * 获取高度
 *
 * @return 高度：float
 */
var getHeight = function getHeight() {
    __send_message(__TYPE.UI.SCREEN.GET_HEIGHT, {});
};

var rotate = function rotate(config) {
    __send_message(__TYPE.UI.SCREEN.ROTATE, config);
};

exports.default = {
    getWidth: getWidth,
    getHeight: getHeight,
    rotate: rotate
};

/***/ }),

/***/ "./src/ui/style.js":
/*!*************************!*\
  !*** ./src/ui/style.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * 隐藏导航栏
 * @param isHidden
 *
 * @return void
 */
var setNavigationBarHidden = function setNavigationBarHidden(isHidden) {
    __send_message(__TYPE.UI.STYLE.SET_NAVIGATION_BAR_HIDDEN, {
        isHidden: isHidden
    });
};
/**
 * 设置导航栏背景颜色
 * @param color
 *
 * @return void
 */
var setNavigationBackgroundColor = function setNavigationBackgroundColor(color) {
    __send_message(__TYPE.UI.STYLE.SET_NAVIGATION_BACKGROUND_COLOR, {
        color: color
    });
};
/**
 * 设置导航标题
 * @param title
 *
 * @return void
 */
var setNavigationTitle = function setNavigationTitle(title) {
    __send_message(__TYPE.UI.STYLE.SET_NAVIGATION_TITLE, {
        title: title
    });
};

var setStatusBarHidden = function setStatusBarHidden(isHidden) {
    __send_message(__TYPE.UI.STYLE.SET_STATUS_BAR_HIDDEN, {
        isHidden: isHidden
    });
};

var setNavigationItemColor = function setNavigationItemColor(color) {
    __send_message(__TYPE.UI.STYLE.SET_NAVIGATION_ITEM_COLOR, {
        color: color
    });
};

var setStatusBarStyle = function setStatusBarStyle(style) {
    __send_message(__TYPE.UI.STYLE.SET_STATUS_BAR_STYLE, {
        style: style
    });
};

var getNavigationBarHeight = function getNavigationBarHeight(config) {
    var hConfig = __handle_config(config);
    __send_message(__TYPE.UI.STYLE.GET_NAVIGATION_BAR_HEIGHT, hConfig);
};

exports.default = {
    setNavigationBarHidden: setNavigationBarHidden,
    setNavigationBackgroundColor: setNavigationBackgroundColor,
    setNavigationTitle: setNavigationTitle,
    setStatusBarHidden: setStatusBarHidden,
    setNavigationItemColor: setNavigationItemColor,
    setStatusBarStyle: setStatusBarStyle,
    getNavigationBarHeight: getNavigationBarHeight
};

/***/ }),

/***/ "electron":
/*!***************************!*\
  !*** external "electron" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("electron");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,